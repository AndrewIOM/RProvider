name: .NET

on:
  push:
    branches: [ master, fix-ci ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]

    steps:
    - name: set mac R_HOME
      if: matrix.os == 'macOS-latest'
      run: echo "R_HOME=/Library/Frameworks/R.framework/Resources" >> $GITHUB_ENV
    - name: set ubuntu R_HOME
      if: matrix.os == 'ubuntu-latest'
      run: echo "R_HOME=/usr/local/bin/R" >> $GITHUB_ENV
    - name: set windows R_HOME
      if: matrix.os == 'windows-latest'
      run: echo "R_HOME=C:\R" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: verify R
      run: |
        Rscript -e '1+1'
        echo "${{ env.R_HOME }}"
    - uses: actions/checkout@master
    - uses: r-lib/actions/setup-r@v1
      name: Setup R environment
      with:
          r-version: '4.1.1'
    - uses: actions/checkout@v2
    - uses: r-lib/actions/setup-r@master
      name: Setup R environment
      with:
        r-version: '4.1.1'
    - name: Set R_HOME environment variable
      run:   |
         if [ "$RUNNER_OS" == "Linux" ]; then
              echo "R_HOME=$(R RHOME)" >> "$GITHUB_ENV"
         elif [ "$RUNNER_OS" == "macOS" ]; then
              echo "R_HOME=$(R RHOME)" >> "$GITHUB_ENV"
         elif [ "$RUNNER_OS" == "Windows" ]; then
              echo "R_HOME=$(R RHOME)" >> "$GITHUB_ENV"
         else
              echo "$RUNNER_OS not supported"
              exit 1
         fi
      shell: bash
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore tool dependencies
      run: dotnet tool restore
    - name: Restore paket dependencies
      run: dotnet paket restore
    - name: Restore dependencies
      run: dotnet restore RProvider.sln
    - name: Restore dependencies
      run: dotnet restore RProvider.Tests.sln
    - name: Build
      run: dotnet fake build -t All
    - name: Deploy documentation from master
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./output
        publish_branch: gh-pages
        force_orphan: true
    - name: Examine bin
      run: ls -r bin
    - name: Publish NuGets (if this version not published before)
      run: dotnet nuget push bin\*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGETKEY }} --skip-duplicate